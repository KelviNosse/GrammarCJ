5.
==============================================================================================================

################ DONE ################
literal:
	| int-literal
	| char-literal
	| float-literal
	| string-literal
	| "true"
	| "false"

################ DONE ################
expression:
    | conditional-expression

################ DONE ################
class-declaration:
	| class-modifier "class" identifier inheritance-base class-body optional-body-end

################ DONE ################
class-modifier:
	| "abstract"
	| EPSILON

################ DONE ################
class-body:
	| '{' optional-class-member-declaration-list '}'

################ DONE ################
optional-class-member-declaration-list:
	| class-member-declaration optional-class-member-declaration-list
	| EPSILON

################ DONE ################
class-member-declaration: 
	| encapsulation-modifier class-member-declaration-options

################ DONE ################
class-member-declaration-options:
    | optional-modifier type-or-void class-member-declaration-options-p

################ DONE ################
class-member-declaration-options-p:
	| identifier field-or-method-declaration;
	| constructor-declaration

################ DONE ################
optional-modifier:
    | "static"
    | "virtual"
    | "override"
    | "abstract"
    | EPSILON

################ DONE ################
field-or-method-declaration:
    | field-declaration
	| method-declaration

################ DONE ################
field-declaration: 
	| variable-assigner variable-declarator-list-p ';'

################ DONE ################
variable-assigner:
	| '=' variable-initializer
	| EPSILON

################ DONE ################
variable-declarator-list:
	| identifier variable-assigner variable-declarator-list-p

################ DONE ################
variable-declarator-list-p:
	| ',' variable-declarator-list
	| EPSILON

################ DONE ################
optional-array-initializer:
	| array-initializer
	| EPSILON

################ DONE ################
array-initializer: 
	| '{' optional-variable-initializer-list '}'

################ DONE ################
variable-initializer:
	| expression
	| array-initializer

################ DONE ################
variable-initializer-list:
	| variable-initializer variable-initializer-list-p

################ DONE ################
optional-variable-initializer-list:
	| variable-initializer-list
	| EPSILON

################ DONE ################
variable-initializer-list-p:
	| ',' variable-initializer-list
	| EPSILON

################ DONE ################
argument-list:
	| expression argument-list-p
	| EPSILON

################ DONE ################
argument-list-p:
	| ',' expression argument-list-p
	| EPSILON

################ DONE ################
method-declaration:
	| '(' fixed-parameters ')' maybe-empty-block

################ DONE ################
maybe-empty-block:
	| '{' optional-statement-list '}'
	| ';'

################ DONE ################
constructor-declaration:
	| constructor-declarator maybe-empty-block

################ DONE ################
constructor-declarator:
	| '(' fixed-parameters ')' constructor-initializer

################ DONE ################
constructor-initializer:
	| ':' "base" '(' argument-list ')'
	| EPSILON

################ DONE ################
type:
	| "int"
	| "char"
	| "string"
	| "bool"
	| "float"
	| identifier

################ DONE ################
type-or-var:
	| type
	| "var"

################ DONE ################
type-or-void:
	| type
	| "void"

4.
==============================================================================================================

################ DONE ################
fixed-parameter:
	| type identifier

################ DONE ################
fixed-parameters:
	| fixed-parameter fixed-paramaters-p
	| EPSILON

################ DONE ################
fixed-parameters-p:
	| ',' fixed-parameter fixed-parameters-p
	| EPSILON

################ DONE ################
interface-declaration: 
	| "interface" identifier inheritance-base interface-body optional-body-end

################ DONE ################
interface-method-header:
	| type-or-void identifier '(' fixed-parameters ')' 

################ DONE ################
inheritance-base:
	| ':' identifiers-list
	| EPSILON

################ DONE ################
interface-body:
	| '{' interface-method-declaration-list '}'

################ DONE ################
interface-method-declaration-list:
	| interface-method-header ';' interface-method-declaration-list
	| EPSILON

################ DONE ################
identifiers-list:
	| identifier identifiers-list-p

################ DONE ################
identifiers-list-p:
	| ',' identifier identifiers-list-p
	| EPSILON

3.
==============================================================================================================

################ DONE ################
type-declaration-list:
	| type-declaration type-declaration-list
	| EPSILON

################ DONE ################
type-declaration:
	| encapsulation-modifier group-declaration

################ DONE ################
encapsulation-modifier:
	| "public"
	| "protected"
	| "private"
	| EPSILON

################ DONE ################
group-declaration:
	| class-declaration
    | interface-declaration
    | enum-declaration

################ DONE ################
enum-declaration: 
	| "enum" identifier enum-body optional-body-end

################ DONE ################
enum-body:
	| '{' optional-assignable-identifiers-list '}'

################ DONE ################
optional-body-end:
	| ';'
	| EPSILON

################ DONE ################
optional-assignable-identifiers-list:
	| identifier assignment-options
	| EPSILON

################ DONE ################
assignment-options:
	| optional-assignable-identifiers-list-p
	| '=' expression optional-assignable-identifiers-list-p
	| [EPSILON]

################ DONE ################
optional-assignable-identifiers-list-p:
	| ',' optional-assignable-identifiers-list
	| EPSILON	

2.
==============================================================================================================

################ DONE ################
namespace-body:
	| '{' optional-using-directive optional-namespace-member-declaration '}'

################ DONE ################
namespace-declaration:
	| "namespace" identifier identifier-attribute namespace-body

################ DONE ################
namespace-member-declaration:
	| namespace-declaration optional-namespace-member-declaration
	| type-declaration-list [optional-namespace-member-declaration]

################ DONE ################
optional-namespace-member-declaration:
	| namespace-member-declaration
	| EPSILON

1.
==============================================================================================================

################ DONE ################
identifier-attribute:
	| '.' identifier identifier-attribute
	| EPSILON

################ DONE ################
using-directive:
	| "using" identifier identifier-attribute ';' optional-using-directive
	
################ DONE ################
optional-using-directive:
	| using-directive
	| EPSILON

################ DONE ################
compilation-unit:
	| optional-using-directive [optional-namespace-member-declaration]
	| optional-namespace-member-declaration

################ DONE ################
code:
	| compilation-unit
